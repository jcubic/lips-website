"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[3296],{2943:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"lips-history","metadata":{"permalink":"/lips-website/blog/lips-history","editUrl":"https://github.com/jcubic/lips-website/tree/docusaurus/docs/blog/2024-03-03-lips-history.md","source":"@site/blog/2024-03-03-lips-history.md","title":"LIPS History","description":"This is the first article on LIPS blog. In this article I will write about the history of LIPS","date":"2024-03-03T00:00:00.000Z","formattedDate":"March 3, 2024","tags":[{"label":"lips","permalink":"/lips-website/blog/tags/lips"},{"label":"history","permalink":"/lips-website/blog/tags/history"}],"readingTime":1.545,"hasTruncateMarker":true,"authors":[{"name":"Jakub T. Jankiewicz","title":"LIPS maintainer","url":"https://jakub.jankiewicz.org/","imageURL":"https://github.com/jcubic.png","key":"jcubic"}],"frontMatter":{"slug":"lips-history","title":"LIPS History","authors":"jcubic","tags":["lips","history"]},"unlisted":false},"content":"This is the first article on LIPS blog. In this article I will write about the history of LIPS\\nScheme interpreter.\\n\\n\x3c!--truncate--\x3e\\n\\n## What is Scheme?\\n\\nScheme is a dialect of the Lisp. The second oldest programming language still in use (after\\nFortran).  Lisp and Scheme have specific syntax with prefix notation and where everything is a list\\n(at least historically).  It\'s also [Homoiconic](https://en.wikipedia.org/wiki/Homoiconicity), which\\nmeans that code and data have the same represantion. This allows to write programs that modify the\\ncode like it was data.\\n\\n## What is LIPS?\\n\\nLIPS name is a recursive ancronym which stands for **\\"LIPS Is Pretty Simple\\"**. LIPS Scheme is\\nimplementation of Scheme programming language in JavaScript. It adds a lot of stuff on top of Scheme\\nto make it more powerful and easier to interact with JavaScript.\\n\\n## History of LIPS\\n\\nIt all started in February of 2018 when I\'ve written the first version of Lisp interpreter. You can\\nstill see the code on [CodePen](https://codepen.io/jcubic/pen/gvvzdp). Then I moved the\\n[devlopment to GitHub](https://github.com/jcubic/lips) and named the project LIPS.  The first release\\n(version 0.2.0) is marked as Mar 2018.\\n\\nAt the begining it was Lisp based on Scheme, but at one point after version\\n[0.20.1 dated as Jul 1, 2020](https://github.com/jcubic/lips/releases/tag/0.20.1), I\'ve starting\\nadding features on devel branch and decided that I want full Scheme implementation. But it turns out\\nthat there are way to many breaking changes to release next version. So I decided that I will\\nrelease it as beta-1.0. Since then LIPS keeps introducing new Beta versions. You can see the\\n[latest release on GitHub](https://github.com/jcubic/lips/releases).\\n\\n## Future of LIPS\\n\\nFor the future plans I want in final version 1.0 are implementation of continutations and Tail Calls\\n(<abbr title=\\"Tail Call Optimization\\">TCO</abbr>) and to be compatibible (more or less) with\\n[R<sup>7</sup>RS specification](https://standards.scheme.org/). To see the progress you can check\\n[1.0 Milestone on GitHub](https://github.com/jcubic/lips/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0)."}]}')}}]);