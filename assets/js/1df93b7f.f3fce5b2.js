"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[237],{9846:(e,n,t)=>{t.d(n,{Z:()=>i});var s=t(7294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},r.apply(this,arguments)}const i=e=>{let{title:n,titleId:t,...i}=e;return s.createElement("svg",r({width:800,height:800,viewBox:"0 0 512 512",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":t},i),n?s.createElement("title",{id:t},n):null,s.createElement("path",{d:"m128.81 49.28 27.407 228.157.06.563v216.906l19.94-39.28 20.468 38.155V296.814L168.563 57.5l-39.75-8.22Z",style:{fill:"#ad0000",fillOpacity:1}}),s.createElement("g",{style:{fill:"teal",stroke:"none",strokeWidth:6.4,strokeDasharray:"none"}},s.createElement("path",{d:"M215.374 313.938v31.813l27.564 10.53c-7.04-20.847-16.565-33.66-27.438-42.25-.04-.03-.084-.06-.125-.092z",style:{fill:"teal",stroke:"none",strokeWidth:6.4,strokeDasharray:"none"}}),s.createElement("path",{d:"M473.094 74.406v226.75l-216.938 79.69-40.78-14.97v38.28c23.21 8.03 58.078 6.813 86.25-2.53v-17.563l184.03-67.625 6.125-2.25V74.407h-18.686zM20.5 74.376v239.813l6.125 2.25 110.97 40.78v-19.906l-98.407-36.156V74.376ZM189.28 73.53l25.593 217.782a88.58 88.58 0 0 1 12.188 8.063c6.452 5.097 12.412 11.36 17.75 18.97V109.5c-15.496-17.475-34.402-28.327-55.532-35.97Z",style:{fill:"teal",stroke:"none",strokeWidth:6.4,strokeDasharray:"none"}}),s.createElement("path",{d:"M454.719 43.03c-65.178 17.392-138.354.102-191.22 70.814v208.812c19.795-29.15 45.443-40.866 70.72-46.53 33.914-7.603 66.18-7.163 91.5-27.626l11.75 14.53c-31.256 25.263-68.25 24.386-99.158 31.314-29.295 6.566-53.978 17.63-72.25 63.187l188.657-71.967V43.03ZM57.594 43v242.563l80 30.53V292c-22.504-3.217-45.065-8.633-62.53-26.844l13.5-12.937c12.15 12.667 29.032 17.263 48.28 20.374L110.656 55.03C93.3 51.725 75.492 48.1 57.594 43Z",style:{fill:"teal",stroke:"none",strokeWidth:6.4,strokeDasharray:"none"}})))}},6295:(e,n,t)=>{t.r(n),t.d(n,{default:()=>j});var s=t(512),r=t(7294),i=t(2263),a=t(6040),o=t(5742),l=t(5893);const c=[{description:"Mixing Scheme and JavaScript",code:';; &() is object literal used with quasiquote\n(let ((object `&(:name "LIPS Scheme"\n                 :version ,lips.version)))\n  ;; you can access JavaScript properties\n  ;; with dot notation\n  (print (string-append object.name\n                        " "\n                        object.version))\n  ;; you can mix scheme and JavaScript\n  (ignore (setTimeout (lambda ()\n                (alert (JSON.stringify object)))\n               1000)))'},{description:"Filter function accept, regex or function. Curry is higher order function that create new function with defaults. Pluck return a function that extract fields from an object.",code:'(print (filter number? \'(foo 10 bar 20 baz 30)))\n;; ==> (10 20 30)\n(print (filter #/foo|bar/ \'(foo bar baz quux)))\n;; ==> (foo bar)\n(define foo_or_bar (curry filter #/foo|bar/))\n(print (foo_or_bar \'(foo bar baz)))\n;; ==> (foo bar)\n\n;; &() is object literal used with quasiquote\n(define (make-person first last)\n        `&(:fist ,first :last ,last))\n\n(define beatles (map make-person\n                    \'("John" "Paul" "Ringo" "George")\n                    \'("Lennon" "McCartney"\n                      "Starr" "Harrison")))\n;; pluck will extract properties from objects\n(write (map (pluck "fist") beatles))\n(newline)\n;; ==> ("John" "Paul" "Ringo" "George")'},{description:"Automagic async/await like resolving of promises and explicit promise quotation.",code:';; JavaScript regular expression literal\n(define re #/<h1>([^>]+)<\\/h1>/)\n;; --\x3e is a macro that allow chaining\n;; of JavaScript methods calls\n;; no need to use Promises becasue of automagic\n;; promise resolving\n(let ((msg (--\x3e (fetch "https://scheme.org.pl")\n                (text)\n                (match re)\n                1)))\n  (print msg))\n\n;; explicit promise handling with quotation\n(let ((promise (--\x3e \'>(fetch "https://scheme.org.pl")\n                    (then (lambda (res)\n                            (res.text)))\n                    (then (lambda (x)\n                            (. (x.match re) 1))))))\n  (print (await promise)))'},{description:"Hygienic syntax-rules macro and few examples of Numeric Tower.",code:';; show hygienic macro prints expression\n;; and the result value\n(define-syntax show\n  (syntax-rules ()\n    [(_ expr ...)\n     (begin\n       (begin\n         (write \'expr)\n         (display " = ")\n         (write expr)\n         (newline))\n         ...)]))\n\n;; few example of Numeric Tower\n(show (/ 1 2)\n      (expt 1/4 1/2)\n      (expt 10+10i 1/2)\n      (log 2+1/2i)\n      (acos -1)\n      (+ 1/2 1/4)\n      (* 3/4 1/10))'},{description:"Syntax extensions and custom repr allow to create new homoiconic data types.",code:';; Create new class using define-class macro\n(define-class Person Object\n   (constructor (lambda (self name)\n                   (set! self.name name))))\n\n;; add syntax extension\n(set-special! "P:" \'make-person lips.specials.SPLICE)\n\n;; add class representation\n(set-repr! Person\n  (lambda (x q)\n    (string-append "P:(" (repr x.name q) ")")))\n\n;; function that create new object\n;; for the syntax extension\n(define (make-person name)\n   (new Person name))\n\n;; we can use new syntax\n(print P:("jon"))\n;; ==> P:("jon")\n(print (. P:("jon") \'name))\n;; ==> "jon"'},{description:"Interaction with JavaScript DOM and jQuery Terminal (REPL).",code:';; this will query the DOM and ivoke click method\n(let ((selector "button[class*=\\"ColorModeToggle\\"]"))\n  (--\x3e (document.querySelector selector)\n       (click)))\n\n;; accessing jQuery Terminal, ignore works like begin\n;; but the return value is ignored so the terminal\n;; is not paused when it find a Promise from\n;; Terminal typing animation\n(ignore\n  (term.css "--background" "#2E2E2E")\n  (term.echo "This is LIPS Scheme" &(:typing #t)))'},{description:"Fibonacci Closure with swap! lisp style macro.",code:";; macro that swap first two variables\n;; with the last two expressions\n(define-macro (swap! a b x y)\n  (let ((g_b (gensym)))\n    `(let ((,g_b ,y))\n       (set! ,a ,b)\n       (set! ,b ,g_b))))\n\n;; example taken from Go website\n;; fib creates a function\n;; that return fibonacci numbers\n(define (fib)\n   (let ((a 0) (b 1))\n     (lambda ()\n        (swap! a b b (+ a b))\n        a)))\n\n(let ((f (fib)))\n  (list (f) (f) (f) (f) (f)))"},{description:"Scheme hygienic macro that creates an assoc list, with macroexpand.",code:';; recursive hygienic syntax-rules macro\n(define-syntax alist\n  (syntax-rules ()\n     ((_) ())\n     ((_ x y z ...)\n      (cons (cons x y) (alist z ...)))))\n\n(print (alist "foo" 10 "bar" 20 "baz" 30))\n;; ==> ((foo . 10) (bar . 20) (baz . 30))\n(macroexpand (alist "foo" 10 "bar" 20))\n;; ==> (#:cons (#:cons "foo" 10)\n;;             (#:cons (#:cons "bar" 20)\n;;                     ()))'},{description:"Built in SRFI-139 syntax-parameterize allows creating anamorphic hygienic macros.",code:";; define new syntax parameter\n(define-syntax-parameter it\n   (syntax-rules ()\n     ((_ . _)\n      (syntax-error \"abort used outside of a loop\"))))\n\n;; syntax-rules macro aif adds (it) parameter\n;; to access tested value.\n(define-syntax aif\n  (syntax-rules ()\n    ((_ cond rest ...)\n     (let ((test cond))\n       (syntax-parameterize\n        ((it (syntax-rules ()\n               ((_) test))))\n        (if test\n            rest ...))))))\n\n;; no need to use assoc two times\n;; or using a variable to hold the value\n(let ((alist '((a . 10) (b . 20))))\n  (aif (assoc 'a alist)\n      (print (cdr (it)))))"},{description:"JavaScript generators (objects that implement iterator protocol)",code:';; JavaScript generator create using JS eval\n(define gen (self.eval "\n    (async function* gen(time, ...args) {\n        function delay(time) {\n            return new Promise((resolve) => {\n                setTimeout(resolve, time);\n            });\n        }\n        for (let x of args) {\n            await delay(time);\n            yield x;\n        }\n    })"))\n\n;; iteration over iterator/generator\n(do-iterator\n  (i (apply gen 100 (range 10)))\n  ()\n  (print i))\n(print (iterator->array (gen 100 1 2 3 4 5)))\n;; strings and lists are JavaScript iterators\n(write (iterator->array "hello"))\n(newline)\n(print (iterator->array \'(1 2 3 4)))'},{description:"Y Combinator and inline factorial function.",code:'(define Y\n  (lambda (h)\n    ((lambda (x) (x x))\n     (lambda (g)\n       (h (lambda args (apply (g g) args)))))))\n\n((Y (lambda (f)\n     (lambda (n)\n       (cond ((< n 0)\n              (throw (new Error "Invalid factorial")))\n             ((zero? n) 1)\n             (else (* n (f (- n 1))))))))\n 10)\n;; ==> 3628800'}];function d(e){(0,r.useEffect)((()=>{!function n(){if(e.length){(function(e){return new Promise(((n,t)=>{const s=document.createElement("script");s.onload=n,s.onerror=t,s.src=e,document.head.appendChild(s)}))})(e.shift()).then(n)}}()}),[])}function m(){return d(["https://code.jquery.com/jquery-3.4.1.min.js","https://cdn.jsdelivr.net/combine/npm/jquery.terminal/js/jquery.terminal.min.js,npm/js-polyfills/keyboard.js,npm/prismjs/prism.js,npm/jquery.terminal/js/prism.js,npm/prismjs/components/prism-scheme.min.js","https://cdn.jsdelivr.net/npm/@jcubic/lips@beta/lib/js/terminal.js","https://cdn.jsdelivr.net/npm/@jcubic/lips@beta/lib/js/prism.js","/js/interpreter.js"]),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(o.Z,{children:[(0,l.jsx)("link",{href:"https://cdn.jsdelivr.net/combine/npm/jquery.terminal/css/jquery.terminal.min.css,npm/prismjs/themes/prism-coy.css,npm/terminal-prism/css/prism-coy.css",rel:"stylesheet"}),(0,l.jsx)("link",{href:"https://cdn.jsdelivr.net/gh/jcubic/lips@devel/lib/css/terminal.css",rel:"stylesheet"}),(0,l.jsx)("link",{href:"https://cdn.jsdelivr.net/gh/richleland/pygments-css/monokai.css",rel:"stylesheet"}),(0,l.jsx)("script",{src:"http://localhost/~kuba/jcubic/scheme/lips/dist/lips.js",bootstrap:"http://localhost/~kuba/jcubic/scheme/lips/dist/std.scm"})]}),(0,l.jsxs)("div",{className:"intro",children:[(0,l.jsx)("div",{className:"actions-wrapper",children:(0,l.jsxs)("ul",{className:"actions cloak",children:[(0,l.jsx)("li",{className:"zoom-in icon",children:(0,l.jsx)("a",{href:"#",children:"Zoom In"})}),(0,l.jsx)("li",{className:"zoom-out icon",children:(0,l.jsx)("a",{href:"#",children:"Zoom Out"})}),(0,l.jsx)("li",{className:"full-screen",children:(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{className:"full-screen icon",children:(0,l.jsx)("a",{href:"#",children:"Full Screen"})}),(0,l.jsx)("li",{className:"exit-full-screen icon",children:(0,l.jsx)("a",{href:"#",children:"Exit Full Screen"})})]})})]})}),(0,l.jsx)("div",{className:"term"}),(0,l.jsxs)("div",{className:"examples",children:[(0,l.jsx)("button",{className:"run",children:"run"}),(0,l.jsx)("ul",{className:"list",children:c.map(((e,n)=>(0,l.jsxs)("li",{className:0===n?"active":void 0,children:[(0,l.jsx)("div",{className:"example",children:(0,l.jsx)("pre",{children:e.code})}),(0,l.jsx)("div",{className:"description",children:e.description})]},n)))}),(0,l.jsx)("ul",{className:"pagination",children:c.map(((e,n)=>(0,l.jsx)("li",{className:0===n?"active":void 0,children:(0,l.jsx)("a",{href:"#",children:n+1})},n)))})]})]})]})}var p=t(2503);const h={bookmarkSVG:"bookmarkSVG_kroK"},u=t(9846).Z;function f(){return(0,l.jsx)("section",{id:"bookmarklet",children:(0,l.jsxs)("div",{className:"container",children:[(0,l.jsx)(u,{className:h.bookmarkSVG,role:"img"}),(0,l.jsx)(p.Z,{as:"h3",children:"Bookmarklet"}),(0,l.jsx)(o.Z,{children:(0,l.jsx)("script",{src:"/js/bookmark.js"})}),(0,l.jsxs)("p",{children:["When you're learning Scheme language, you can run the REPL directly on any page that have Scheme tutorial you're learning from. It even work with PDF files and new empty tab (at least in Chrome). Drag this link ",(0,l.jsx)("a",{id:"bookmark_link",children:"LIPS REPL"})," to your bookmarks. When you click on the bookmark it will run the interpreter. You can also just click the link."]})," ",(0,l.jsx)("p",{children:"The bookmark can also be used to add REPL to your LIPS Web application."})," ",(0,l.jsxs)("p",{children:["It may also not work no sites that are protected with"," ",(0,l.jsx)("a",{href:"https://en.wikipedia.org/wiki/Content_Security_Policy",children:"Content Security Policy"})]})]})})}const x={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN"};function b(){const{siteConfig:e}=(0,i.Z)(),n=(0,r.useRef)();return(0,r.useEffect)((()=>{!function e(){window.lips?n.current.innerText=window.lips.version:setTimeout(e,100)}()}),[]),(0,l.jsx)("header",{className:(0,s.Z)("hero hero--primary",x.heroBanner),children:(0,l.jsxs)("div",{className:"container",children:[(0,l.jsxs)(p.Z,{as:"h1",className:"hero__title",children:[e.title," v.",(0,l.jsx)("span",{ref:n})]}),(0,l.jsx)("p",{className:"hero__subtitle",children:e.tagline}),(0,l.jsx)(m,{})]})})}function j(){const{siteConfig:e}=(0,i.Z)();return(0,l.jsxs)(a.Z,{title:e.title,description:e.tagline,children:[(0,l.jsx)(b,{}),(0,l.jsx)("main",{children:(0,l.jsx)(f,{})})]})}}}]);